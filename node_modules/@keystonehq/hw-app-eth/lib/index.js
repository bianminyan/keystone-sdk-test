"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _EthLegacy_send;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Eth = exports.HDPathType = void 0;
const hw_transport_webusb_1 = require("@keystonehq/hw-transport-webusb");
const hw_transport_error_1 = require("@keystonehq/hw-transport-error");
const uuid = __importStar(require("uuid"));
const rlp = __importStar(require("rlp"));
const bc_ur_1 = require("@ngraveio/bc-ur");
const bc_ur_registry_eth_1 = require("@keystonehq/bc-ur-registry-eth");
const request_1 = require("./request");
const ur_parser_1 = require("./ur-parser");
const serializer_1 = require("./serializer");
var path_type_1 = require("./path-type");
Object.defineProperty(exports, "HDPathType", { enumerable: true, get: function () { return path_type_1.HDPathType; } });
__exportStar(require("./request"), exports);
const new_1 = __importDefault(require("./new"));
exports.Eth = new_1.default;
class EthLegacy {
    constructor(transport) {
        _EthLegacy_send.set(this, (action, data) => __awaiter(this, void 0, void 0, function* () {
            if (!this.transport) {
                (0, hw_transport_error_1.throwTransportError)(hw_transport_error_1.Status.ERR_TRANSPORT_HAS_NOT_BEEN_SET);
            }
            return yield this.transport.send(action, data);
        }));
        this.checkLockStatus = () => __awaiter(this, void 0, void 0, function* () {
            return yield __classPrivateFieldGet(this, _EthLegacy_send, "f").call(this, hw_transport_webusb_1.Actions.CMD_CHECK_LOCK_STATUS, '');
        });
        this.signTransaction = (keyringInstance, address, tx) => __awaiter(this, void 0, void 0, function* () {
            const dataType = tx.type === 0 ? bc_ur_registry_eth_1.DataType.transaction : bc_ur_registry_eth_1.DataType.typedTransaction;
            let messageToSign;
            if (tx.type === 0) {
                messageToSign = rlp.encode(tx.getMessageToSign(false));
            }
            else {
                messageToSign = tx.getMessageToSign(false);
            }
            const hdPath = yield keyringInstance._pathFromAddress(address);
            const chainId = tx.common.chainId();
            const requestId = uuid.v4();
            const ethSignRequest = bc_ur_registry_eth_1.EthSignRequest.constructETHRequest(messageToSign, dataType, hdPath, keyringInstance.xfp, requestId, chainId, address);
            const ur = ethSignRequest.toUR();
            const signatureResponse = yield this.signTransactionFromUr(new bc_ur_1.UREncoder(new bc_ur_1.UR(Buffer.from(ur.cbor, 'hex'), ur.type), Infinity).nextPart().toUpperCase());
            const decoder = new bc_ur_1.URDecoder();
            decoder.receivePart(signatureResponse.payload);
            if (!decoder.isComplete()) {
                (0, hw_transport_error_1.throwTransportError)(hw_transport_error_1.Status.ERR_UR_INCOMPLETE);
            }
            return (0, ur_parser_1.parseTransaction)(signatureResponse.payload, tx);
        });
        this.exportPubKeyFromUr = (params, serializer = serializer_1.ExportPubKeyParamsSerializer.v2) => __awaiter(this, void 0, void 0, function* () {
            yield this.CheckDeviceVersion().catch(() => serializer = serializer_1.ExportPubKeyParamsSerializer.v1);
            const { payload: pubKeyUr } = yield __classPrivateFieldGet(this, _EthLegacy_send, "f").call(this, hw_transport_webusb_1.Actions.CMD_EXPORT_ADDRESS, serializer(Object.assign({ chain: hw_transport_webusb_1.Chain.ETH, wallet: request_1.Wallet.Rabby }, params)));
            return (0, ur_parser_1.parseExportedPublicKeyOrAddress)(pubKeyUr);
        });
        this.CheckDeviceVersion = () => __awaiter(this, void 0, void 0, function* () {
            return yield __classPrivateFieldGet(this, _EthLegacy_send, "f").call(this, hw_transport_webusb_1.Actions.CMD_GET_DEVICE_VERSION, '');
        });
        this.transport = transport;
    }
    static createWithUSBTransport(config) {
        return __awaiter(this, void 0, void 0, function* () {
            const transport = yield hw_transport_webusb_1.TransportWebUSB.connect(config);
            yield transport.close();
            return new EthLegacy(transport);
        });
    }
    signTransactionFromUr(urString) {
        return __awaiter(this, void 0, void 0, function* () {
            const result = yield __classPrivateFieldGet(this, _EthLegacy_send, "f").call(this, hw_transport_webusb_1.Actions.CMD_RESOLVE_UR, urString);
            return result;
        });
    }
}
_EthLegacy_send = new WeakMap();
exports.default = EthLegacy;
__decorate([
    hw_transport_webusb_1.logMethod
], EthLegacy.prototype, "signTransactionFromUr", null);
//# sourceMappingURL=index.js.map