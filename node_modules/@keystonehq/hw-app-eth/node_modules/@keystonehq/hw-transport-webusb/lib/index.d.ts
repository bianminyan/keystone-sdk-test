/// <reference types="w3c-web-usb" />
import { Actions } from './actions';
export { Actions } from './actions';
export * from './webusb';
export { Status as StatusCode } from '@keystonehq/hw-transport-error';
export { Chain } from './chain';
export * from './decorators';
export * from './helper';
export interface TransportConfig {
    endpoint?: number;
    timeout?: number;
    maxPacketSize?: number;
    disconnectListener?: (device: USBDevice) => void;
}
export declare class TransportWebUSB {
    #private;
    private device;
    private endpoint;
    private requestTimeout;
    private maxPacketSize;
    /**
     * The `requestPermission` static method is an asynchronous function that requests permission from the user to access a USB device.
     * It first checks if the WebUSB API is supported in the current environment.
     * Then, it requests access to a USB device.
     * After the device has been accessed, it is then closed.
     * In order to establish a connection with a USB device, the application must first request the user's permission.
     */
    static requestPermission: () => Promise<void>;
    /**
     * The `connect` static method is an asynchronous function that connects to a USB device.
     * It first checks if the WebUSB API is supported in the current environment.
     * Then, it retrieves a list of all USB devices that the application has permission to access using the `getKeystoneDevices` method.
     * The `getKeystoneDevices` method can only retrieve devices that the application has previously obtained permission to access using the `requestDevice` method.
     * Finally, it creates and returns a new `TransportWebUSB` object using the selected device.
     */
    static connect: (config?: TransportConfig) => Promise<TransportWebUSB>;
    constructor(device: USBDevice, config?: TransportConfig);
    send<T>(action: Actions, data: unknown): Promise<T>;
    receive: (action: Actions, requestID: number) => Promise<any>;
    open: () => Promise<void>;
    close: () => Promise<false | void | undefined>;
}
//# sourceMappingURL=index.d.ts.map